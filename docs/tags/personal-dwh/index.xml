<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Personal Dwh on Lubolab</title>
    <link>https://lubolab.com/tags/personal-dwh/</link>
    <description>Recent content in Personal Dwh on Lubolab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>lubomir.kamensky@gmail.com (Lubomir Kamensky)</managingEditor>
    <webMaster>lubomir.kamensky@gmail.com (Lubomir Kamensky)</webMaster>
    <copyright>(c) 2017 Lubolab</copyright>
    <lastBuildDate>Mon, 05 Feb 2018 03:57:28 +0200</lastBuildDate>
    
	<atom:link href="https://lubolab.com/tags/personal-dwh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building Sensor Network: with BigClown</title>
      <link>https://lubolab.com/building-sensor-network-bc/</link>
      <pubDate>Mon, 05 Feb 2018 03:57:28 +0200</pubDate>
      <author>lubomir.kamensky@gmail.com (Lubomir Kamensky)</author>
      <guid>https://lubolab.com/building-sensor-network-bc/</guid>
      <description>The Motivation I am definitely not a hardware guy. Never was and never will be, but nevertheless, I enjoy building my smart house and garden.
I started with not that smart weather station and moved its data to the cloud in my first blog and later used some open API of smart IoT products like Netatmo Cameras, see the article here.
Unfortunately, there are some limitations always. It is hard to customize the specialized products and mostly it is only possible to access the data from the cloud.</description>
    </item>
    
    <item>
      <title>Camera Events: The ETL</title>
      <link>https://lubolab.com/camera-events-the-etl/</link>
      <pubDate>Sun, 14 Jan 2018 03:57:28 +0200</pubDate>
      <author>lubomir.kamensky@gmail.com (Lubomir Kamensky)</author>
      <guid>https://lubolab.com/camera-events-the-etl/</guid>
      <description>The ETL Script environment We are going to access Netatmo cameras using Netatmo Connect API which is basically REST API providing JSON responses. I think the best scripting environment for work with dictionaries, lists, and sets is Python.
And there is even nice client simplifying the communication with this API in Python netatmo-api-python provided by Philippe Larduinat. Well, it wasn&amp;rsquo;t hard to decide and I installed the latest version of 3.</description>
    </item>
    
    <item>
      <title>Camera Events: Data Model</title>
      <link>https://lubolab.com/camera-events-data-model/</link>
      <pubDate>Sat, 13 Jan 2018 03:57:28 +0200</pubDate>
      <author>lubomir.kamensky@gmail.com (Lubomir Kamensky)</author>
      <guid>https://lubolab.com/camera-events-data-model/</guid>
      <description>The Idea I have few smart Netatmo cameras, both indoor and outdoor. And it is quite logical to integrate them into my personal Datawarehouse. There is even nice open API supporting such intention.
The goal is to load event data into detail layer and store the snapshot photos in Google photos using the Google Backup and Sync. Then, of course, somehow link the data with the photos.
The Data Model Concept This time we are going to face bit more complicated interaction with the source system.</description>
    </item>
    
    <item>
      <title>Astronomical Events</title>
      <link>https://lubolab.com/astronomical-events/</link>
      <pubDate>Mon, 17 Apr 2017 03:57:28 +0200</pubDate>
      <author>lubomir.kamensky@gmail.com (Lubomir Kamensky)</author>
      <guid>https://lubolab.com/astronomical-events/</guid>
      <description>Personal environment Personal DWH begins with data about personal environment. Weather and day length affect our activity significantly. We already have Weather Data mart created, so now it is the time to build another one on top of astronomical events.
 This new datamart is going to be a common pattern for extending our personal DWH with any new data area. The detail layer We start in our detail layer, focusing on another Observation subtype, the Event.</description>
    </item>
    
    <item>
      <title>Reporting: Data Lab Web App</title>
      <link>https://lubolab.com/the-data-lab-web-app/</link>
      <pubDate>Fri, 17 Feb 2017 03:57:28 +0200</pubDate>
      <author>lubomir.kamensky@gmail.com (Lubomir Kamensky)</author>
      <guid>https://lubolab.com/the-data-lab-web-app/</guid>
      <description>Friendly Web App Wanted Now it is the time to start playing with data we have collected. We need some nice, simple, user friendly web application which will be both easy to use and maintain.
I thought it can help me that I was some time web developer in late 90s. But honestly, I was terrified what happened with web development in past years.
The time when the developer was in full control of his code using html, css, javascript and some server technology like ASP or PHP are definitely gone.</description>
    </item>
    
    <item>
      <title>Weather Data Mart</title>
      <link>https://lubolab.com/weather-data-mart/</link>
      <pubDate>Fri, 10 Feb 2017 03:57:28 +0200</pubDate>
      <author>lubomir.kamensky@gmail.com (Lubomir Kamensky)</author>
      <guid>https://lubolab.com/weather-data-mart/</guid>
      <description>Welcome to the Cloud In the first post I have stated that any cloud SQL service is still too expensive comparing to other options. As long as that assumption was only living in my head it was doing pretty well. But once it was written, things changed dramatically. The questions start raising.
As a consequence there was long chain of events starting with detail investigation of Google Cloud SQL prices, testing the smallest SQL instance and discovering the whole new world of options.</description>
    </item>
    
    <item>
      <title>Detail Layer: Logical Data Model</title>
      <link>https://lubolab.com/detail-layer-logical-data-model/</link>
      <pubDate>Tue, 17 Jan 2017 03:57:28 +0200</pubDate>
      <author>lubomir.kamensky@gmail.com (Lubomir Kamensky)</author>
      <guid>https://lubolab.com/detail-layer-logical-data-model/</guid>
      <description>No Data Changes in the Detail layer The first post ended with the table weather_measuring filled with a data describing a weather. And I mentioned that this table belongs to something called Detail layer. Now it is the time to put it in some kind of context.
Detail layer is the place where the most detailed information coming from various sources is stored. Quite probably we will use just part of it for the end user applications, maybe we will even change some data a bit for different purposes.</description>
    </item>
    
    <item>
      <title>My Personal Data Warehouse Kickoff</title>
      <link>https://lubolab.com/my-personal-dwh-kickoff/</link>
      <pubDate>Thu, 12 Jan 2017 03:57:28 +0200</pubDate>
      <author>lubomir.kamensky@gmail.com (Lubomir Kamensky)</author>
      <guid>https://lubolab.com/my-personal-dwh-kickoff/</guid>
      <description>The Weather Station It all started more than five years ago the day I decided to buy my very own weather station. I ended up with La Crosse Technology WS-2800-IT. You can still find it on a market under various brands like TFA, Techno line,.. It enables wireless data transmission to PC using USB stick, which made it good candidate for my future sensor network.
The Local Server Of course I needed a local server collecting regularly the data and sending it to my virtual server in the cloud.</description>
    </item>
    
  </channel>
</rss>